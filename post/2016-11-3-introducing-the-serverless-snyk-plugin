---
title: Introducing the Serverless Snyk Plugin
description: "Using Serverless is a boon for security, as it greatly reduces the risk of unpatched servers. In this environment, vulnerable open source packages become the primary security risk. The new Serverless Snyk plugin can find, fix, prevent and respond to any vulnerabilities your app, helping you to ship securely."
date: 2016-11-03
thumbnail: 'http://res.cloudinary.com/snyk/image/upload/w_400/v1468845258/logo/snyk-avatar.png'
layout: Post
authors:
  - FirstnameLastname
---

**Intro**
great stuff here

## The Serverless Snyk Plugin
![Screenshot of the Serverless Snyk plugin in action](http://res.cloudinary.com/snyk/image/upload/c_scale,w_900/v1478099693/serverless-snyk-screenshot.png)

The [Serverless Snyk plugin](https://github.com/snyk/serverless-snyk) helps you to prevent vulnerable packages in your Serverless application, using [Snyk.io](https://snyk.io). It does this by focusing on four stages: find, fix, prevent and respond.

### Find
With the Serverless Snyk plugin installed, each time you deploy the plugin will scan your dependencies and test them against Snyk's [open-source vulnerability database](http://snyk.io/vuln). Serverless Snyk can either stop the deploy at this point (the default behavior), enabling you to address the issues, or continue on, simply noting the vulnerabilities for you to return to.

### Fix
Finding issues is alright, but fixing them is even better. If you use Snyk's [GitHub integration](https://snyk.io/docs/github/) they can submit a PR to your repository with any updates or patches needed to secure your application. You can also fix the issues by installing and running `snyk wizard` locally.

In either case, Snyk will create a `.snyk` policy file to help guide future Snyk commands. If the Serverless Snyk plugin sees that you have a policy file in place, before your application is deployed it will apply any of the updates and patches you have specified by [running `snyk protect`](https://snyk.io/docs/using-snyk/#protect).

### Prevent
Security is a continous process. While you may be vulnerability free today, that doesn't mean that you'll be vulnerability free tomorrow. Your application will continue to evolve, and so may the dependencies it uses.

With Snyk's testing and protection both running every time you deploy, you'll be able to ensure that you are alerted as soon as any new vulnerabilities are discovered in your application, enabling you to fix them before they ever have a chance to become a problem.

### Respond
New vulnerabilities are being discovered all the time. In October alone, 23 new vulnerabilities in Node.js packages were published! Just as you want to prevent new dependencies from introducing vulnerabilities, you want to be able to respond to any newly disclosed vulnerabilities as soon as possible.

When you sign up for Snyk, you are given an API token. If you include the API token in your Serverless project (using a .env file to ensure it's not mistakenly published), the Serverless Snyk plugin will take a snapshot of the current state of your dependencies and save it to your account. 

Whenever a new vulnerability is released that impacts your application, Snyk will notify you, and anyone else in your Snyk organization, by email or Slack. This way you can address the issue right away.

## Celebrate Security
With the Serverless Snyk plugin in place, you can now let everyone know about your newly improved level of security by including a badge in your repository. Here's what the badge looks like right now for the Serverless Snyk plugin itself:

[![Known Vulnerabilities in Serverless Snyk](https://snyk.io/test/github/snyk/serverless-snyk/badge.svg)](https://snyk.io/test/github/snyk/serverless-snyk)

You can find more information about how to include the badge for your GitHub repository in the Snyk [documentation](https://snyk.io/docs/badges/).

## Summary
Serverless is a powerful new approach that enables developers to focus on building features instead of having to focus on the underlying architecture. From a security perspective, it greatly reduces the risk security issues due to unpatched servers. When paired with the new Serverless Snyk plugin, you can ensure your dependencies will also be secureâ€”automating security so that you can focus on building your application.
